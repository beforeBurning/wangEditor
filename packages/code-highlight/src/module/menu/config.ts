/**
 * @description menu config
 * @author wangfupeng
 */

export function genCodeLangs() {
  // 1. text value 对应关系参考 prism 官网 https://prismjs.com/#supported-languages
  // 2. 要加入一个新语言时，要引入相应的 js 模块（代码在 `vender/prism.ts`），例如 `import 'prismjs/components/prism-php'`

  return [
    { text: 'Abap', value: 'abap' },
    { text: 'Abnf', value: 'abnf' },
    { text: 'Actionscript', value: 'actionscript' },
    { text: 'Ada', value: 'ada' },
    { text: 'Agda', value: 'agda' },
    { text: 'Al', value: 'al' },
    { text: 'Antlr4', value: 'antlr4' },
    { text: 'Apacheconf', value: 'apacheconf' },
    { text: 'Apex', value: 'apex' },
    { text: 'Apl', value: 'apl' },
    { text: 'Arduino', value: 'arduino' },
    { text: 'Arff', value: 'arff' },
    { text: 'Asciidoc', value: 'asciidoc' },
    { text: 'Asm6502', value: 'asm6502' },
    { text: 'Aspnet', value: 'aspnet' },
    { text: 'utohotkey', value: 'autohotkey' },
    { text: 'Autoit', value: 'autoit' },
    { text: 'Avisynth', value: 'avisynth' },
    { text: 'Avro-idl', value: 'avro-idl' },
    { text: 'Bash', value: 'bash' },
    { text: 'Basic', value: 'basic' },
    { text: 'Batch', value: 'batch' },
    { text: 'Bbcode', value: 'bbcode' },
    { text: 'Bicep', value: 'bicep' },
    { text: 'Birb', value: 'birb' },
    { text: 'Bison', value: 'bison' },
    { text: 'Bnf', value: 'bnf' },
    { text: 'Brainfuck', value: 'brainfuck' },
    { text: 'Brightscript', value: 'brightscript' },
    { text: 'Bro', value: 'bro' },
    { text: 'Bsl', value: 'bsl' },
    { text: 'C', value: 'c' },
    { text: 'Cfscript', value: 'cfscript' },
    { text: 'Chaiscript', value: 'chaiscript' },
    { text: 'Cil', value: 'cil' },
    { text: 'Clike', value: 'clike' },
    { text: 'Clojure', value: 'clojure' },
    { text: 'Cmake', value: 'cmake' },
    { text: 'Cobol', value: 'cobol' },
    { text: 'Coffeescript', value: 'coffeescript' },
    { text: 'Concurnas', value: 'concurnas' },
    { text: 'Coq', value: 'coq' },
    { text: 'Core', value: 'core' },
    { text: 'C++', value: 'cpp' },
    { text: 'Crystal', value: 'crystal' },
    { text: 'C#', value: 'csharp' },
    { text: 'Cshtml', value: 'cshtml' },
    { text: 'Csp', value: 'csp' },
    { text: 'Css Extras', value: 'css-extras' },
    { text: 'Css', value: 'css' },
    { text: 'Csv', value: 'csv' },
    { text: 'Cypher', value: 'cypher' },
    { text: 'D', value: 'd' },
    { text: 'Dart', value: 'dart' },
    { text: 'Dataweave', value: 'dataweave' },
    { text: 'Dax', value: 'dax' },
    { text: 'Dhall', value: 'dhall' },
    { text: 'Diff', value: 'diff' },
    { text: 'Django', value: 'django' },
    { text: 'Dns Zone File', value: 'dns-zone-file' },
    { text: 'Docker', value: 'docker' },
    { text: 'Dot', value: 'dot' },
    { text: 'Dbnf', value: 'ebnf' },
    { text: 'Dditorconfig', value: 'editorconfig' },
    { text: 'Eiffel', value: 'eiffel' },
    { text: 'Ejs', value: 'ejs' },
    { text: 'Elixir', value: 'elixir' },
    { text: 'Elm', value: 'elm' },
    { text: 'Erb', value: 'erb' },
    { text: 'Erlang', value: 'erlang' },
    { text: 'Etlua', value: 'etlua' },
    { text: 'Excel Formula', value: 'excel-formula' },
    { text: 'Factor', value: 'factor' },
    { text: 'False', value: 'false' },
    { text: 'Firestore Security Rules', value: 'firestore-security-rules' },
    { text: 'Flow', value: 'flow' },
    { text: 'Fortran', value: 'fortran' },
    { text: 'Fsharp', value: 'fsharp' },
    { text: 'Ftl', value: 'ftl' },
    { text: 'Gap', value: 'gap' },
    { text: 'Gcode', value: 'gcode' },
    { text: 'Gdscript', value: 'gdscript' },
    { text: 'Gedcom', value: 'gedcom' },
    { text: 'Gherkin', value: 'gherkin' },
    { text: 'Git', value: 'git' },
    { text: 'Glsl', value: 'glsl' },
    { text: 'Gml', value: 'gml' },
    { text: 'Gn', value: 'gn' },
    { text: 'Go', value: 'go' },
    { text: 'Graphql', value: 'graphql' },
    { text: 'Groovy', value: 'groovy' },
    { text: 'Haml', value: 'haml' },
    { text: 'Handlebars', value: 'handlebars' },
    { text: 'Haskell', value: 'haskell' },
    { text: 'Haxe', value: 'haxe' },
    { text: 'Hcl', value: 'hcl' },
    { text: 'Hlsl', value: 'hlsl' },
    { text: 'Hoon', value: 'hoon' },
    { text: 'Hpkp', value: 'hpkp' },
    { text: 'Hsts', value: 'hsts' },
    { text: 'Http', value: 'http' },
    { text: 'Ichigojam', value: 'ichigojam' },
    { text: 'Icon', value: 'icon' },
    { text: 'Icu Message Format', value: 'icu-message-format' },
    { text: 'Idris', value: 'idris' },
    { text: 'Iecst', value: 'iecst' },
    { text: 'Ignore', value: 'ignore' },
    { text: 'Inform7', value: 'inform7' },
    { text: 'Ini', value: 'ini' },
    { text: 'Io', value: 'io' },
    { text: 'J', value: 'j' },
    { text: 'Java', value: 'java' },
    { text: 'Javadoc', value: 'javadoc' },
    { text: 'Javadoclike', value: 'javadoclike' },
    { text: 'Javascript', value: 'javascript' },
    { text: 'Javastacktrace', value: 'javastacktrace' },
    { text: 'Jexl', value: 'jexl' },
    { text: 'Jolie', value: 'jolie' },
    { text: 'Jq', value: 'jq' },
    { text: 'Js Extras', value: 'js-extras' },
    { text: 'Js Templates', value: 'js-templates' },
    { text: 'Jsdoc', value: 'jsdoc' },
    { text: 'Json', value: 'json' },
    { text: 'Json5', value: 'json5' },
    { text: 'Jsonp', value: 'jsonp' },
    { text: 'Jsstacktrace', value: 'jsstacktrace' },
    { text: 'Jsx', value: 'jsx' },
    { text: 'Julia', value: 'julia' },
    { text: 'Keyman', value: 'keyman' },
    { text: 'Kotlin', value: 'kotlin' },
    { text: 'Kumir', value: 'kumir' },
    { text: 'Kusto', value: 'kusto' },
    { text: 'Latex', value: 'latex' },
    { text: 'Latte', value: 'latte' },
    { text: 'Less', value: 'less' },
    { text: 'Lilypond', value: 'lilypond' },
    { text: 'Lisp', value: 'lisp' },
    { text: 'Livescript', value: 'livescript' },
    { text: 'Llvm', value: 'llvm' },
    { text: 'Log', value: 'log' },
    { text: 'Lolcode', value: 'lolcode' },
    { text: 'Lua', value: 'lua' },
    { text: 'Magma', value: 'magma' },
    { text: 'Makefile', value: 'makefile' },
    { text: 'Markdown', value: 'markdown' },
    // { text: 'Markup Templating', value: 'markup-templating' },
    { text: 'Markup', value: 'markup' },
    { text: 'Matlab', value: 'matlab' },
    { text: 'Maxscript', value: 'maxscript' },
    { text: 'Mel', value: 'mel' },
    { text: 'Mermaid', value: 'mermaid' },
    { text: 'Mizar', value: 'mizar' },
    { text: 'Mongodb', value: 'mongodb' },
    { text: 'Monkey', value: 'monkey' },
    { text: 'Moonscript', value: 'moonscript' },
    { text: 'N1ql', value: 'n1ql' },
    { text: 'N4js', value: 'n4js' },
    { text: 'Nand2tetris Hdl', value: 'nand2tetris-hdl' },
    { text: 'Naniscript', value: 'naniscript' },
    { text: 'Nasm', value: 'nasm' },
    { text: 'Neon', value: 'neon' },
    { text: 'Nevod', value: 'nevod' },
    { text: 'Nginx', value: 'nginx' },
    { text: 'Nim', value: 'nim' },
    { text: 'Nix', value: 'nix' },
    { text: 'Nsis', value: 'nsis' },
    { text: 'Objectivec', value: 'objectivec' },
    { text: 'Ocaml', value: 'ocaml' },
    { text: 'Opencl', value: 'opencl' },
    { text: 'Openqasm', value: 'openqasm' },
    { text: 'Oz', value: 'oz' },
    { text: 'Parigp', value: 'parigp' },
    { text: 'Parser', value: 'parser' },
    { text: 'Pascal', value: 'pascal' },
    { text: 'Pascaligo', value: 'pascaligo' },
    { text: 'Pcaxis', value: 'pcaxis' },
    { text: 'Peoplecode', value: 'peoplecode' },
    { text: 'Perl', value: 'perl' },
    { text: 'Php Extras', value: 'php-extras' },
    { text: 'Php', value: 'php' },
    { text: 'Phpdoc', value: 'phpdoc' },
    { text: 'Plsql', value: 'plsql' },
    { text: 'Powerquery', value: 'powerquery' },
    { text: 'Powershell', value: 'powershell' },
    { text: 'Processing', value: 'processing' },
    { text: 'Prolog', value: 'prolog' },
    { text: 'Promql', value: 'promql' },
    { text: 'Properties', value: 'properties' },
    { text: 'Protobuf', value: 'protobuf' },
    { text: 'Psl', value: 'psl' },
    { text: 'Pug', value: 'pug' },
    { text: 'Puppet', value: 'puppet' },
    { text: 'Pure', value: 'pure' },
    { text: 'Purebasic', value: 'purebasic' },
    { text: 'Purescript', value: 'purescript' },
    { text: 'Python', value: 'python' },
    { text: 'Q', value: 'q' },
    { text: 'Qml', value: 'qml' },
    { text: 'Qore', value: 'qore' },
    { text: 'Qsharp', value: 'qsharp' },
    { text: 'R', value: 'r' },
    { text: 'Racket', value: 'racket' },
    { text: 'Reason', value: 'reason' },
    { text: 'Regex', value: 'regex' },
    { text: 'Rego', value: 'rego' },
    { text: 'Renpy', value: 'renpy' },
    { text: 'Rest', value: 'rest' },
    { text: 'Rip', value: 'rip' },
    { text: 'Roboconf', value: 'roboconf' },
    { text: 'Robotframework', value: 'robotframework' },
    { text: 'Ruby', value: 'ruby' },
    { text: 'Rust', value: 'rust' },
    { text: 'Sas', value: 'sas' },
    { text: 'Sass', value: 'sass' },
    { text: 'Scala', value: 'scala' },
    { text: 'Scheme', value: 'scheme' },
    { text: 'Scss', value: 'scss' },
    { text: 'Shell Session', value: 'shell-session' },
    { text: 'Smali', value: 'smali' },
    { text: 'Smalltalk', value: 'smalltalk' },
    { text: 'Smarty', value: 'smarty' },
    { text: 'Sml', value: 'sml' },
    { text: 'Solidity', value: 'solidity' },
    { text: 'Solution File', value: 'solution-file' },
    { text: 'Soy', value: 'soy' },
    { text: 'Sparql', value: 'sparql' },
    { text: 'Splunk Spl', value: 'splunk-spl' },
    { text: 'Sqf', value: 'sqf' },
    { text: 'Sql', value: 'sql' },
    { text: 'Squirrel', value: 'squirrel' },
    { text: 'Stan', value: 'stan' },
    { text: 'Stylus', value: 'stylus' },
    { text: 'Swift', value: 'swift' },
    { text: 'Systemd', value: 'systemd' },
    { text: 'T4-cs', value: 't4-cs' },
    { text: 'T4-templating', value: 't4-templating' },
    { text: 'T4-vb', value: 't4-vb' },
    { text: 'Tap', value: 'tap' },
    { text: 'Tcl', value: 'tcl' },
    { text: 'Textile', value: 'textile' },
    { text: 'Toml', value: 'toml' },
    { text: 'Tsx', value: 'tsx' },
    { text: 'Tt2', value: 'tt2' },
    { text: 'Turtle', value: 'turtle' },
    { text: 'Twig', value: 'twig' },
    { text: 'Typescript', value: 'typescript' },
    { text: 'Unrealscript', value: 'unrealscript' },
    { text: 'Uri', value: 'uri' },
    { text: 'V', value: 'v' },
    { text: 'Vala', value: 'vala' },
    { text: 'Vbnet', value: 'vbnet' },
    { text: 'Velocity', value: 'velocity' },
    { text: 'Verilog', value: 'verilog' },
    { text: 'Vhdl', value: 'vhdl' },
    { text: 'Vim', value: 'vim' },
    { text: 'Visual Basic', value: 'visual-basic' },
    { text: 'Warpscript', value: 'warpscript' },
    { text: 'Wasm', value: 'wasm' },
    { text: 'Wiki', value: 'wiki' },
    { text: 'Wolfram', value: 'wolfram' },
    { text: 'Wren', value: 'wren' },
    { text: 'Xeora', value: 'xeora' },
    { text: 'Xml Doc', value: 'xml-doc' },
    { text: 'Xojo', value: 'xojo' },
    { text: 'Xquery', value: 'xquery' },
    { text: 'Yaml', value: 'yaml' },
    { text: 'Yang', value: 'yang' },
    { text: 'Zig', value: 'zig' },
  ]
}
